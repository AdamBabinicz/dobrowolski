// Exhibitions.js
import React from "react";
import styled from "styled-components";
import img1 from "../assets/images/3.jfif";
import img2 from "../assets/images/4.jfif";
import img3 from "../assets/images/5.jfif";
import img4 from "../assets/images/5.jfif";

const ExhibitionsSection = styled.section`
  padding: 32px;
  background-color: ${(props) =>
    props.$alt ? props.theme.altBackground : props.theme.background};
  color: ${(props) => (props.$alt ? props.theme.altColor : props.theme.color)};
  /* width: 70%; */
  margin: 0 auto;

  @media (max-width: 768px) {
    padding: 16px;
    width: 100%;
  }
`;

const ExhibitionContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 24px;
  flex-direction: ${({ $reverse }) => ($reverse ? "row-reverse" : "row")};

  @media (max-width: 768px) {
    flex-direction: column;
  }
`;

const ExhibitionImage = styled.img`
  flex: 1;
  width: 100%;
  height: auto;
  border-radius: 8px;
  margin-bottom: 16px;

  @media (min-width: 768px) {
    margin-bottom: 0;
    margin-right: ${({ $reverse }) => ($reverse ? "0" : "16px")};
    margin-left: ${({ $reverse }) => ($reverse ? "16px" : "0")};
    max-width: 200px;
    max-height: 100%;
    object-fit: cover;
  }
`;

const ExhibitionContent = styled.div`
  flex: 1;
`;

const ExhibitionTitle = styled.h3`
  margin-bottom: 8px;
`;

const ExhibitionDate = styled.p`
  font-style: italic;
  margin-bottom: 16px;
`;

const ExhibitionDescription = styled.p`
  margin-bottom: 16px;
`;

const Exhibitions = () => {
  const exhibitionsData = [
    {
      title: "Wystawa czasowa",
      date: "Radom - 1947",
      description:
        "Wystawa zbiorowa obrazów, szkiców i rysunków artysty malarza Wacława Dobrowolskiego, - zorganizowana przez Towarzystwo Przyjaciół Sztuk Pięknych w Radomiu.",
      image: img1,
    },
    {
      title: "Wystawa czasowa",
      date: "Radom - 1948",
      description:
        "Wystawa zbiorowa obrazów, szkiców i rysunków artysty malarza Wacława Dobrowolskiego - kontynuacja z 1947 r.",
      image: img2,
    },
    {
      title:
        "35 lat pracy artystycznej : Wystawa zbiorowa Wacława Dobrowolskiego",
      date: "1955",
      description: "tekst",
      image: img3,
    },
    {
      title: "Wystawa czasowa",
      date: "Radom - 1967",
      description:
        "Wacław Dobrowolski - malarstwo - zorganizowana przez Związek Polskich Artystów Plastyków w Radomiu.",
      image: img4,
    },
    {
      title: "Wystawa czasowa",
      date: "Radom - 1970",
      description:
        "Wacław Dobrowolski 1890-1969 - zorganizowana przez Towarzystwo Przyjaciół Sztuk Pięknych w Radomiu.",
      image: img4,
    },
  ];

  return (
    <div id="wystawy">
      <h2>Wystawy</h2>
      {exhibitionsData.map((exhibition, index) => (
        <ExhibitionsSection key={index} $alt={index % 2 !== 0}>
          <ExhibitionContainer $reverse={index % 2 !== 0}>
            <ExhibitionImage
              src={exhibition.image}
              alt={exhibition.title}
              $reverse={index % 2 !== 0}
            />
            <ExhibitionContent>
              <ExhibitionTitle>{exhibition.title}</ExhibitionTitle>
              <ExhibitionDate>{exhibition.date}</ExhibitionDate>
              <ExhibitionDescription>
                {exhibition.description}
              </ExhibitionDescription>
            </ExhibitionContent>
          </ExhibitionContainer>
        </ExhibitionsSection>
      ))}
    </div>
  );
};

export default Exhibitions;


import React from "react";
import Slider from "react-slick";
import styled from "styled-components";
import { FaArrowLeft, FaArrowRight } from "react-icons/fa";
import image1 from "../assets/images/1.jpg";
import image2 from "../assets/images/2.jpg";
import image3 from "../assets/images/3.jpg";
import image4 from "../assets/images/4.jpg";
import image5 from "../assets/images/5.jpg";
import image6 from "../assets/images/6.jpg";
import image7 from "../assets/images/9.jpg";
import image8 from "../assets/images/10.jpg";
import image9 from "../assets/images/11.jpg";
import image10 from "../assets/images/12.jpg";

import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

const GalleryContainer = styled.section`
  padding: 32px;
  background: ${(props) => props.theme.background};
  position: relative;
`;

const Title = styled.h2`
  font-size: 2.5rem;
  margin-bottom: 16px;
  color: ${(props) => props.theme.color};
`;

const ImageWrapper = styled.div`
  position: relative;
`;

const Image = styled.img`
  width: 100%;
  height: 400px;
  object-fit: cover;
  transition: transform 0.3s ease-in-out;
  gap: 2rem;

  &:hover {
    transform: scale(1.05);
  }

  @media (min-width: 768px) {
    width: 700px;
    height: 700px;
    margin: 0 auto;
    object-fit: contain;
  }
`;

const ImageOverlay = styled.div`
  position: absolute;
  /* bottom: 0; */
  top: 95%;
  left: 50%;
  transform: translate(-50%, -95%);
  padding: 10px;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  text-align: center;
  opacity: 0;
  transition: opacity 0.3s;

  @media (min-width: 768px) {
    font-size: 0.8rem;
    max-width: 100%;
  }
`;

const ImageWrapperHover = styled(ImageWrapper)`
  &:hover ${ImageOverlay} {
    opacity: 1;
  }
`;

const NavigationButton = styled.button`
  background: ${(props) => props.theme.background};
  color: ${(props) => props.theme.color};
  border: none;
  padding: 8px;
  cursor: pointer;
  border-radius: 50%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  z-index: 10;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  transition: background 0.3s;

  &:hover {
    background: ${(props) => props.theme.hoverBackground};
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  ${(props) => props.$left && "left: 16px;"}
  ${(props) => props.$right && "right: 16px;"}

  @media (max-width: 768px) {
    ${(props) => props.$left && "left: 8px;"}
    ${(props) => props.$right && "right: 8px;"}
  }
`;

const CustomNextArrow = ({ onClick }) => (
  <NavigationButton $right onClick={onClick}>
    <FaArrowRight />
  </NavigationButton>
);

const CustomPrevArrow = ({ onClick }) => (
  <NavigationButton $left onClick={onClick}>
    <FaArrowLeft />
  </NavigationButton>
);

const Gallery = () => {
  const images = [
    { src: image1, title: "Snopki", year: "1958" },
    { src: image2, title: "Zamyślona", year: "1947" },
    { src: image3, title: "Portret chłopca", year: "1933" },
    { src: image4, title: "Marina na Capri", year: "1928" },
    { src: image5, title: "Pejzaż z rzeką", year: "?" },
    { src: image6, title: "Polna droga", year: "?" },
    { src: image7, title: "Portret pani", year: "1929" },
    { src: image8, title: "Portret mężczyzny w garniturze", year: "1937" },
    { src: image9, title: "Portret Bolesława Bończyka", year: "1937" },
    { src: image10, title: "Portret Czesławy Bończyk", year: "1937" },
  ];

  const settings = {
    dots: false,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    nextArrow: <CustomNextArrow />,
    prevArrow: <CustomPrevArrow />,
    responsive: [
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <GalleryContainer id="gallery-obrazy">
      <Title>Obrazy</Title>
      <Slider {...settings}>
        {images.map((image, index) => (
          <ImageWrapperHover key={index}>
            <Image src={image.src} alt={`Artwork ${index + 1}`} />
            <ImageOverlay>
              {image.title} - {image.year}
            </ImageOverlay>
          </ImageWrapperHover>
        ))}
      </Slider>
    </GalleryContainer>
  );
};

export default Gallery;


import React from "react";
import styled from "styled-components";
import { animated, useSpring } from "react-spring";

const TooltipContainer = styled(animated.div)`
  position: absolute;
  background-color: ${(props) => props.theme.tooltipBackground};
  color: ${(props) => props.theme.tooltipText};
  padding: 8px 12px;
  border-radius: 4px;
  box-shadow: ${(props) =>
    props.theme.mode === "dark"
      ? "0 2px 8px rgba(255, 255, 255, 0.6)" // Shadow for dark mode
      : "0 2px 8px rgba(0, 0, 0, 0.2)"}; // Shadow for light mode
  z-index: 9999;
`;

const Tooltip = ({ content }) => {
  const tooltipAnimation = useSpring({
    opacity: 1,
    transform: "translateY(-10px)",
    config: { tension: 300, friction: 20 },
  });

  if (!content) return null;

  return (
    <TooltipContainer style={tooltipAnimation}>{content}</TooltipContainer>
  );
};

export default Tooltip;


// ThemeContext.js
import React, { createContext, useState, useContext } from "react";
import {
  createGlobalStyle,
  ThemeProvider as StyledThemeProvider,
} from "styled-components";

const ThemeContext = createContext();

const GlobalStyle = createGlobalStyle`
  body {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif; // Przykładowy styl font-family
  }
`;

export const useTheme = () => useContext(ThemeContext);

export const ThemeProvider = ({ children }) => {
  const [theme, setTheme] = useState("light");

  const toggleTheme = () => {
    setTheme((prevTheme) => (prevTheme === "light" ? "dark" : "light"));
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme }}>
      <StyledThemeProvider theme={{ mode: theme }}>
        <GlobalStyle />
        {children}
      </StyledThemeProvider>
    </ThemeContext.Provider>
  );
};



import React, { useState } from "react";
import styled from "styled-components";
import Tooltip from "./Tooltip";
import { MdInfoOutline } from "react-icons/md";

const SectionContainer = styled.div`
  background: ${(props) => props.theme.sectionBackground};
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  position: relative;
`;

const SectionImage = styled.img`
  width: 100%;
  height: auto;
  border-radius: 8px;
  margin-bottom: 16px;
`;

const SectionTitle = styled.h3`
  font-size: 1.5rem;
  margin-bottom: 8px;
  color: ${(props) => props.theme.sectionTitleColor};
`;

const SectionText = styled.p`
  margin-bottom: 16px;
`;

const TooltipContainer = styled.div`
  position: relative;
  display: inline-block;
`;

const Section = ({ title, text, image, alt, tooltipContent }) => {
  const [showTooltip, setShowTooltip] = useState(false);

  const handleMouseEnter = () => {
    setShowTooltip(true);
  };

  const handleMouseLeave = () => {
    setShowTooltip(false);
  };

  return (
    <SectionContainer>
      <SectionImage src={image} alt={alt} />
      <SectionTitle>{title}</SectionTitle>
      <SectionText>{text}</SectionText>
      <TooltipContainer
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
      >
        <MdInfoOutline size={20} />
        {showTooltip && tooltipContent && <Tooltip content={tooltipContent} />}
      </TooltipContainer>
    </SectionContainer>
  );
};

export default Section;

